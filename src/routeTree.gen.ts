/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DefaultImport } from './routes/_default'
import { Route as CypherImport } from './routes/_cypher'
import { Route as ClientImport } from './routes/_client'

// Create Virtual Routes

const DefaultIndexLazyImport = createFileRoute('/_default/')()
const DefaultHomeLazyImport = createFileRoute('/_default/home')()
const CypherCypherDashboardLazyImport = createFileRoute(
  '/_cypher/cypher/dashboard',
)()
const ClientClientDashboardLazyImport = createFileRoute(
  '/_client/client/dashboard',
)()

// Create/Update Routes

const DefaultRoute = DefaultImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const CypherRoute = CypherImport.update({
  id: '/_cypher',
  getParentRoute: () => rootRoute,
} as any)

const ClientRoute = ClientImport.update({
  id: '/_client',
  getParentRoute: () => rootRoute,
} as any)

const DefaultIndexLazyRoute = DefaultIndexLazyImport.update({
  path: '/',
  getParentRoute: () => DefaultRoute,
} as any).lazy(() =>
  import('./routes/_default/index.lazy').then((d) => d.Route),
)

const DefaultHomeLazyRoute = DefaultHomeLazyImport.update({
  path: '/home',
  getParentRoute: () => DefaultRoute,
} as any).lazy(() => import('./routes/_default/home.lazy').then((d) => d.Route))

const CypherCypherDashboardLazyRoute = CypherCypherDashboardLazyImport.update({
  path: '/cypher/dashboard',
  getParentRoute: () => CypherRoute,
} as any).lazy(() =>
  import('./routes/_cypher/cypher/dashboard.lazy').then((d) => d.Route),
)

const ClientClientDashboardLazyRoute = ClientClientDashboardLazyImport.update({
  path: '/client/dashboard',
  getParentRoute: () => ClientRoute,
} as any).lazy(() =>
  import('./routes/_client/client/dashboard.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_client': {
      preLoaderRoute: typeof ClientImport
      parentRoute: typeof rootRoute
    }
    '/_cypher': {
      preLoaderRoute: typeof CypherImport
      parentRoute: typeof rootRoute
    }
    '/_default': {
      preLoaderRoute: typeof DefaultImport
      parentRoute: typeof rootRoute
    }
    '/_default/home': {
      preLoaderRoute: typeof DefaultHomeLazyImport
      parentRoute: typeof DefaultImport
    }
    '/_default/': {
      preLoaderRoute: typeof DefaultIndexLazyImport
      parentRoute: typeof DefaultImport
    }
    '/_client/client/dashboard': {
      preLoaderRoute: typeof ClientClientDashboardLazyImport
      parentRoute: typeof ClientImport
    }
    '/_cypher/cypher/dashboard': {
      preLoaderRoute: typeof CypherCypherDashboardLazyImport
      parentRoute: typeof CypherImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ClientRoute.addChildren([ClientClientDashboardLazyRoute]),
  CypherRoute.addChildren([CypherCypherDashboardLazyRoute]),
  DefaultRoute.addChildren([DefaultHomeLazyRoute, DefaultIndexLazyRoute]),
])

/* prettier-ignore-end */
